name: Build & Upload iOS

on:
  push:
    branches: [ master ]      # change if needed

jobs:
  ios-build:
    runs-on: macos-latest

    steps:
    # 0Ô∏è‚É£  üîç Show runner image & OpenSSL version
    - name: Env / tool versions  üîç
      run: |
        sw_vers
        uname -a
        which openssl && openssl version
        echo "Shell: $SHELL"

    # 1Ô∏è‚É£  Check out code
    - uses: actions/checkout@v4

    # 2Ô∏è‚É£  Recreate signing artifacts from secrets
    - name: Restore signing files
      run: |
        echo "$P12_BASE64"      | base64 --decode > signing.p12
        echo "$PROFILE_BASE64"  | base64 --decode > app.mobileprovision
        echo "$ASC_KEY_BASE64"  | base64 --decode > asc_key.p8
      env:
        P12_BASE64:     ${{ secrets.P12_BASE64 }}
        PROFILE_BASE64: ${{ secrets.PROFILE_BASE64 }}
        ASC_KEY_BASE64: ${{ secrets.ASC_KEY_BASE64 }}

    # 2Ô∏è‚É£.1 üîç List files & sizes
    - name: List working directory  üîç
      run: ls -l

    # 2Ô∏è‚É£.2 üîç Show p12 SHA-256
    - name: Check p12 hash  üîç
      run: shasum -a 256 signing.p12

    # 2Ô∏è‚É£.3 üîç Confirm password opens p12 (non-interactive)
    - name: Sanity-check p12 password  üîç
      run: |
        set -e
        echo "Trying to open signing.p12 with supplied password..."
        openssl pkcs12 -in signing.p12 -nokeys \
                       -passin pass:${{ secrets.P12_PASSWORD }} \
                       -clcerts -info >/dev/null
        echo "Password accepted ‚úîÔ∏é"

    # 3Ô∏è‚É£  Import certificate into throw-away keychain
    - uses: apple-actions/import-codesign-certs@v2
      with:
        p12-filepath: signing.p12
        p12-password: ${{ secrets.P12_PASSWORD }}

    # 3Ô∏è‚É£.1 üîç List certs now in keychain
    - name: List keychain identities  üîç
      run: security find-identity -p codesigning -v

    # 4Ô∏è‚É£  Install Ruby (Fastlane) and cache gems
    - uses: ruby/setup-ruby@v1
      with:
        ruby-version: '3.2'
        bundler-cache: true

    # 5Ô∏è‚É£  Build MAUI .ipa
    - name: Publish .NET MAUI for iOS
        run: |
          dotnet workload install maui          # ‚Üê replaces the two specific lines
          dotnet restore
          dotnet publish -c Release -f net9.0-ios \
                         -o out /p:BuildIpa=true \
                         /p:ProvisioningProfile=app.mobileprovision

    # 5Ô∏è‚É£.1 üîç List output directory
    - name: List publish output  üîç
      run: ls -l out

    # 6Ô∏è‚É£  Upload to TestFlight / ASC
    - name: Deliver to App Store Connect
      uses: maierj/fastlane-action@v3.1.0
      with:
        lane: deliver
      env:
        APP_STORE_CONNECT_API_KEY_KEY:               ${{ secrets.ASC_KEY_ID }}
        APP_STORE_CONNECT_API_KEY_ISSUER_ID:         ${{ secrets.ASC_ISSUER_ID }}
        APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64: "true"
        APP_STORE_CONNECT_API_KEY_CONTENT:           ${{ secrets.ASC_KEY_BASE64 }}
