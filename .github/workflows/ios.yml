name: Build & Distribute iOS

# ─────────────────────────────────────────────────────────────────────────────
# Trigger on pushes to master
# ─────────────────────────────────────────────────────────────────────────────
on:
  push:
    branches:
      - master

jobs:
  ios-build:
    runs-on: macos-15

    env:
      # Exact code-sign identity as it appears in your .p12 certificate
      CODESIGN_IDENTITY: "Apple Distribution: rylan champion (YUDP2VB9YY)"
      # Build configuration
      BUILD_CONFIGURATION: "Release"

    steps:
      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣  Env / Tool Versions 🔍
      # ─────────────────────────────────────────────────────────────────────────
      - name: Env / Tool Versions 🔍
        run: |
          echo "== macOS Version =="
          sw_vers
          echo ""
          echo "== Kernel Info =="
          uname -a
          echo ""
          echo "== OpenSSL =="
          which openssl && openssl version
          echo ""
          echo "== Dotnet (before install) =="
          dotnet --version || echo "not installed yet"

      # ─────────────────────────────────────────────────────────────────────────
      # 2️⃣  Checkout Code
      # ─────────────────────────────────────────────────────────────────────────
      - name: Checkout Code
        uses: actions/checkout@v4

      # ─────────────────────────────────────────────────────────────────────────
      # 3️⃣  Cache NuGet packages (speeds up repeated runs)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Cache NuGet packages
        uses: actions/cache@v3
        with:
          path: ~/.nuget/packages
          key: nuget-${{ runner.os }}-${{ hashFiles('**/*.csproj') }}

      # ─────────────────────────────────────────────────────────────────────────
      # 4️⃣  Cache .NET workload packs (so “dotnet workload install” is faster)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Cache .NET workload packs
        uses: actions/cache@v3
        with:
          path: ~/.dotnet
          key: dotnet-workloads-${{ runner.os }}-8.0.301

      # ─────────────────────────────────────────────────────────────────────────
      # 5️⃣  Restore signing files from Base64 secrets
      # ─────────────────────────────────────────────────────────────────────────
      - name: Restore signing files
        run: |
          echo "$P12_BASE64"      | base64 --decode > signing.p12
          echo "$PROFILE_BASE64"  | base64 --decode > app.mobileprovision
          echo "$ASC_KEY_BASE64"  | base64 --decode > asc_key.p8
          ls -l signing.p12 app.mobileprovision asc_key.p8
        env:
          P12_BASE64:     ${{ secrets.P12_BASE64 }}
          PROFILE_BASE64: ${{ secrets.PROFILE_BASE64 }}
          ASC_KEY_BASE64: ${{ secrets.ASC_KEY_BASE64 }}

      # ─────────────────────────────────────────────────────────────────────────
      # 6️⃣  Check P12 Hash 🔍 (optional sanity check)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Check P12 Hash 🔍
        run: shasum -a 256 signing.p12

      # ─────────────────────────────────────────────────────────────────────────
      # 7️⃣  Sanity-check P12 password 🔐
      # ─────────────────────────────────────────────────────────────────────────
      - name: Sanity-check P12 password 🔐
        run: |
          openssl pkcs12 -in signing.p12 -nokeys \
                         -passin pass:${{ secrets.P12_PASSWORD }} \
                         -clcerts -info >/dev/null
          echo "✅ P12 password is correct"
        env:
          P12_PASSWORD: ${{ secrets.P12_PASSWORD }}

      # ─────────────────────────────────────────────────────────────────────────
      # 8️⃣  Import Signing Certificate into a temporary keychain
      # ─────────────────────────────────────────────────────────────────────────
      - name: Import Signing Certificate 🔑
        uses: apple-actions/import-codesign-certs@v2
        id: import-certs
        with:
          p12-filepath: signing.p12
          p12-password: ${{ secrets.P12_PASSWORD }}

      # ─────────────────────────────────────────────────────────────────────────
      # 9️⃣  List CodeSigning Identities (debug)
      # ─────────────────────────────────────────────────────────────────────────
      - name: List CodeSigning Identities 🔍
        run: security find-identity -p codesigning -v

      # ─────────────────────────────────────────────────────────────────────────
      # 🔟  Setup Ruby & Bundler (for Fastlane)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Setup Ruby & Bundler
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: "3.2"
          bundler-cache: true

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣1️⃣  Install Provisioning Profile 🔏
      # ─────────────────────────────────────────────────────────────────────────
      - name: Install Provisioning Profile 🔏
        id: install-profile
        run: |
          security cms -D -i app.mobileprovision -o profile.plist
          uuid=$(/usr/libexec/PlistBuddy -c 'Print :UUID' profile.plist)
          echo "UUID=$uuid" >> "$GITHUB_ENV"
          mkdir -p "$HOME/Library/MobileDevice/Provisioning Profiles"
          cp app.mobileprovision \
             "$HOME/Library/MobileDevice/Provisioning Profiles/$uuid.mobileprovision"
          echo "Installed provisioning profile as $uuid.mobileprovision"

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣2️⃣  Setup .NET SDK 8.0.301
      # ─────────────────────────────────────────────────────────────────────────
      - name: Setup .NET SDK 8.0.301
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: "8.0.301"

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣3️⃣  Install MAUI iOS workload (17.4.0)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Install MAUI iOS workload
        run: dotnet workload install maui-ios --skip-manifest-update

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣4️⃣  Restore iOS assets only (skip Android)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Restore iOS assets only
        run: |
          dotnet msbuild ./AlanJayApp.csproj \
            /t:Restore \
            /p:TargetFramework=net8.0-ios \
            /p:RuntimeIdentifier=ios-arm64

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣5️⃣  Publish .NET MAUI for iOS → produces out/AlanJayApp.ipa
      # ─────────────────────────────────────────────────────────────────────────
      - name: Publish .NET MAUI for iOS 🚀
        run: |
          dotnet publish ./AlanJayApp.csproj \
            -c ${{ env.BUILD_CONFIGURATION }} \
            -f net8.0-ios \
            -r ios-arm64 \
            -o out \
            --no-restore \
            /p:BuildIpa=true \
            /p:CodesignKey="${{ env.CODESIGN_IDENTITY }}" \
            /p:CodesignKeychain="${{ steps.import-certs.outputs.keychain-path }}" \
            /p:CodesignProvision="${{ env.UUID }}" \
            /p:PublishTrimmed=true \
            /p:MtouchLink=SdkOnly
        env:
          CODESIGN_IDENTITY: ${{ env.CODESIGN_IDENTITY }}

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣6️⃣  List .ipa Output 🔍 (sanity check)
      # ─────────────────────────────────────────────────────────────────────────
      - name: List .ipa Output 🔍
        run: |
          echo "---- Published .ipa → out/ ----"
          ls -l out

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣7️⃣  Create Gemfile & bundle install fastlane  (NEW)
      # ─────────────────────────────────────────────────────────────────────────
      - name: Create Gemfile & bundle install fastlane
        run: |
          cat > Gemfile << EOF
          source "https://rubygems.org"
          gem "fastlane"
          EOF
          bundle install
        shell: bash

      # ─────────────────────────────────────────────────────────────────────────
      # 1️⃣8️⃣  Deliver to App Store Connect ✈️
      # ─────────────────────────────────────────────────────────────────────────
      - name: Deliver to App Store Connect ✈️
        uses: maierj/fastlane-action@v3.1.0
        with:
          lane: beta
        env:
          FASTLANE_IPA_PATH: "out/AlanJayApp.ipa"
          APP_STORE_CONNECT_API_KEY_KEY_ID:    ${{ secrets.ASC_KEY_ID }}
          APP_STORE_CONNECT_API_KEY_ISSUER_ID: ${{ secrets.ASC_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_IS_KEY_CONTENT_BASE64: "true"
          APP_STORE_CONNECT_API_KEY_CONTENT:   ${{ secrets.ASC_KEY_BASE64 }}

